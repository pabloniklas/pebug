#!/usr/bin/env python3

import os
import re
import readline
import sys

from classes.Cpu import Cpu
from classes.Memory import Memory


def pebug_main():
    print("")

    memory = Memory(65536)
    stack = Memory(1)
    cpu = Cpu(memory)

    prompt = "[C]=> "

    print("pebug - Python 8086 Assembler.")
    print("An x86 old-debug-like program.")
    print("Enter <h> for help.")
    print("By Pablo Niklas <pablo.niklas@gmail.com>.")
    print(f"Main memory size: {memory.pages} pages.")
    print(f"Stack size: {stack.pages} page/s.")

    """https://montcs.bloomu.edu/Information/LowLevel/DOS-Debug.html"""
    cmd = input(f"{prompt}")
    while not re.match("^[qQ]", cmd):

        if re.match("^[sS] [0-9a-f]{,4} .*$", cmd):
            search(memory, cmd)
        elif cmd == "h":
            help()
        elif re.match("^[fF] [0-9a-f]{,4} [0-9a-f]{,4}$", cmd):
            reset_memory_range(memory, cmd)
        elif re.match("^[fF] [0-9a-f]{,4} [0-9a-f]{,4} .*$", cmd):
            fill_memory_range(memory, cmd)
        elif re.match("^[dD] [0-9a-f]{,4} [0-9a-f]{,4}$", cmd):
            display(memory, cmd)
        elif re.match("^sp [0-9a-f]{,4}$", cmd):
            setting_memory_page(memory, cmd)
        elif  re.match("[dD][eE][mM][oO]", cmd):
            demo(memory)
        else:
            print("Input not recognized. Enter h for a quick help.")

        cmd = input(f"{prompt}")


def search(memory, cmd):
    args = cmd.split(" ")
    start = int(args[1], 16)
    pattern = args[2]
    list = memory.search(start, pattern)
    for aa in list:
        print(aa)


def reset_memory_range(memory, cmd):
    args = cmd.split(" ")
    start = int(args[1], 16)
    end = int(args[2], 16)

    memory.fill(start, end, chr(0))


def fill_memory_range(memory, cmd):
    args = cmd.split(" ")
    start = int(args[1], 16)
    end = int(args[2], 16)
    pattern = args[3]

    memory.fill(start, end, pattern)


def setting_memory_page(memory, cmd):
    arg = cmd.split(" ")
    memory.active_page = int(arg[1], 16)


def display(memory, cmd):
    args = cmd.split(" ")
    a = int(args[1], 16)
    b = int(args[2], 16)
    memory.display(a, b)


def help():
    print("List of Available Commands:")
    print()
    print("Dump => D [range]: Displays the contents of a block of memory.")
    print("Fill => F range list: This command can also be used to clear "
          "large areas of Memory as well as filling smaller areas with a "
          "continuously repeating phrase or single byte.")
    print("Quit => Q: Exit the program.")


def demo(memory):
    memory.load_into(49152, 0, "This is a demo. Welcome.")  # TODO: Random text (like fortune)
    print("The demo text was load into C000:0000, type 'd 0 30' to read it.")


# Python's entry point
if __name__ == '__main__':

    # readline's history
    histfile = os.path.join(os.path.expanduser("~"), ".pebughist")
    try:
        readline.read_history_file(histfile)
        readline.set_history_length(1000)
    except IOError:
        pass

    pebug_main()

    readline.write_history_file(histfile)
    sys.exit(0)
